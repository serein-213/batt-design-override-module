name: Build batt_design_override (Auto GKI Fetch)

"on":
  workflow_dispatch:
    inputs:
      kernel_lines:
        description: 'Kernel version selection'
        type: choice
        required: true
        default: '6.1'
        options:
          - '6.1'
          - '5.15'
          - '5.10'
          - '5.4'
          - '5.4,5.10,5.15,6.1'

      build_type:
        description: 'Build type'
        type: choice
        required: true
        default: 'both'
        options:
          - 'both'
          - 'batt_only'
          - 'chg_only'

      version:
        description: 'Module version (empty=auto)'
        required: false
        default: ''

      release:
        description: 'Create Release'
        type: boolean
        required: false
        default: false

      refresh_sources:
        description: 'Force refresh GKI source cache'
        type: boolean
        required: false
        default: false

      enable_debug:
        description: 'Enable debug mode (verbose logs)'
        type: boolean
        required: false
        default: false

      custom_repo_url:
        description: 'Custom kernel source repo (optional)'
        required: false
        default: ''

      custom_ref:
        description: 'Custom repo branch/tag'
        required: false
        default: ''

      upload_artifacts:
        description: 'Upload build artifacts'
        type: boolean
        required: false
        default: true

      skip_cache:
        description: 'Skip cache (force rebuild)'
        type: boolean
        required: false
        default: false

jobs:
  build:
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.ver.outputs.version }}

    strategy:
      fail-fast: false
      matrix:
        kernel_line: ["5.4", "5.10", "5.15", "6.1"]

    env:
      MODULE_ID: batt-design-override
      MAGISK_DIR: packaging/magisk-batt-design-override
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      ARCH: arm64
      LLVM: 1
      LLVM_IAS: 1
      JOBS: 8
      LTO_JOBS: 8

    steps:
      - uses: actions/checkout@v4

      - name: Filter required kernels
        id: filter
        run: |
          REQ='${{ inputs.kernel_lines }}'
          if [[ -z "$REQ" || "$REQ" == "5.4,5.10,5.15,6.1" ]]; then 
            B=1
          else
            WANT=$(echo "$REQ" | tr ' ' ',' | sed 's/,,*/,/g' | sed 's/^,//;s/,$//')
            IFS=',' read -r -a ARR <<< "$WANT"
            B=0
            for k in "${ARR[@]}"; do 
              [[ "$k" == "${{ matrix.kernel_line }}" ]] && B=1 && break
            done
          fi
          echo "build=$B" >> $GITHUB_OUTPUT
          echo "[i] Kernel ${{ matrix.kernel_line }}: $([ $B -eq 1 ] && echo 'BUILD' || echo 'SKIP')"

      - name: Skip marker
        if: steps.filter.outputs.build != '1'
        run: echo "Skip ${{ matrix.kernel_line }}"

      - name: Install dependencies
        if: steps.filter.outputs.build == '1'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            cpio libelf-dev bc flex bison python3 rsync \
            build-essential zip unzip file jq git \
            lld clang llvm llvm-dev llvm-runtime
          echo "[i] Host clang:"; clang --version || true
          echo "[i] Host ld.lld path:"; command -v ld.lld || true
          if ! command -v ld.lld >/dev/null 2>&1; then
            FOUND=$(command -v /usr/lib/llvm-*/bin/ld.lld 2>/dev/null | head -n1 || true)
            [[ -n "$FOUND" ]] && sudo ln -sf "$FOUND" /usr/local/bin/ld.lld
          fi
          if ! command -v ld.lld >/dev/null 2>&1; then
            echo "::error ::Still missing ld.lld"
            exit 2
          fi

      - name: Branch selection preparation
        if: steps.filter.outputs.build == '1'
        id: branch_select
        run: |
          case "${{ matrix.kernel_line }}" in
            5.4)  CANDIDATES=(android11-5.4 android12-5.10 android-mainline)
                  OUT=gki/out-5.4 ;;
            5.10) CANDIDATES=(android12-5.10 android13-5.10 android-mainline)
                  OUT=gki/out-5.10 ;;
            5.15) CANDIDATES=(android13-5.15 android14-6.1 android-mainline)
                  OUT=gki/out-5.15 ;;
            6.1)  CANDIDATES=(android14-6.1 android-mainline)
                  OUT=gki/out-6.1 ;;
            *) echo 'Unknown kernel_line' >&2; exit 2;;
          esac
          mkdir -p gki "$OUT"
          echo "candidates=${CANDIDATES[*]}" >> $GITHUB_OUTPUT
          echo "out=$OUT" >> $GITHUB_OUTPUT
          echo "[i] Candidate branches: ${CANDIDATES[*]}"

      - name: Select and clone branch
        if: steps.filter.outputs.build == '1'
        id: fetch_kernel
        run: |
          set -e
          CANDIDATES='${{ steps.branch_select.outputs.candidates }}'
          CUSTOM_URL='${{ inputs.custom_repo_url }}'
          CUSTOM_REF='${{ inputs.custom_ref }}'
          if [[ -n "$CUSTOM_URL" && -n "$CUSTOM_REF" ]]; then
            echo "[i] Using custom repo: $